{"version":3,"file":"hwc.cjs.production.min.js","sources":["../src/contexts/HwcContext.tsx","../src/utils/round.ts","../src/components/HwcDragPane.tsx","../src/components/HwcGrid.tsx","../src/constants.ts","../src/utils/events.ts","../src/components/HwcEventsRenderer.tsx","../src/components/HwcHeader.tsx","../src/hooks/useHwc.ts","../src/utils/posToDate.ts"],"sourcesContent":["import React from 'react';\nimport { HwcEvent } from '../models/event.model';\nimport { Pos } from '../models/pos.model';\n\nexport type IHwcContext = {\n  pos: Pos;\n  date: Date;\n  startDay: Date;\n  daysCount: number;\n  cellHeight: number;\n  cellWidth: number;\n\n  events: HwcEvent[];\n\n  setPos: (pos: Pos) => void;\n  setWidth: (width: number) => void;\n\n  shadowEvent?: HwcEvent;\n  setStartDragDate: (date?: Date) => void;\n  requestAddEventHandler: (ev: HwcEvent) => void;\n};\n\nexport const HwcContext = React.createContext<IHwcContext | null>(null);\n\nexport const HwcProvider = HwcContext.Provider;\n\nexport const useHwcContext = () => {\n  const ctx = React.useContext(HwcContext);\n  if (ctx === null)\n    throw new Error(\n      'No WeekPicker Context found. Please Wrap Hwc components in <HwcProvider />'\n    );\n\n  return ctx;\n};\n","export const roundToQuarterHour = (date: Date): Date => {\n  const rounded = startOfMinute(date);\n  const minutes = rounded.getMinutes() + rounded.getHours() * 60;\n\n  const roundedMinute = (Math.round((minutes / 60) * 4) * 60) / 4;\n\n  const d = startOfDay(date);\n  d.setMinutes(roundedMinute);\n  return d;\n};\n\nexport const roundToSemiHour = (date: Date): Date => {\n  const rounded = startOfMinute(date);\n  const minutes = rounded.getMinutes() + rounded.getHours() * 60;\n\n  const roundedMinute = (Math.round((minutes / 60) * 2) * 60) / 2;\n\n  const d = startOfDay(date);\n  d.setMinutes(roundedMinute);\n  return d;\n};\n\nexport const roundToHour = (date: Date): Date => {\n  return startOfHour(date);\n};\n\nexport const startOfDay = (input: string | number | Date): Date => {\n  const d = new Date(input);\n  d.setHours(0, 0, 0, 0);\n\n  return d;\n};\n\nexport const startOfHour = (input: string | number | Date): Date => {\n  const d = new Date(input);\n  d.setMinutes(0, 0, 0);\n\n  return d;\n};\n\nexport const startOfMinute = (input: string | number | Date): Date => {\n  const d = new Date(input);\n  d.setSeconds(0, 0);\n\n  return d;\n};\n","import React, { useCallback, useRef, useState } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport { HOUR_IN_MILLIS } from '../constants';\nimport { useHwcContext } from '../contexts/HwcContext';\nimport { Pos } from '../models/pos.model';\nimport { roundToQuarterHour } from '../utils/round';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport type HwcDragPaneProps = React.ComponentProps<'div'> & {};\n\nexport const HwcDragPane = React.forwardRef<HTMLDivElement, HwcDragPaneProps>(\n  (\n    {\n      onMouseMove = () => {},\n      onMouseDown = () => {},\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const {\n      setPos,\n      date,\n      setWidth,\n      setStartDragDate,\n      requestAddEventHandler,\n      shadowEvent,\n      cellHeight,\n    } = useHwcContext();\n\n    const [element, setRef] = useState<HTMLDivElement | null>(null);\n\n    useIsomorphicLayoutEffect(() => {\n      if (!element) return;\n\n      const observer = new ResizeObserver(([entry]) => {\n        if (entry) setWidth(entry.contentRect.width);\n      });\n      observer.observe(element);\n\n      return () => {\n        observer.disconnect();\n      };\n    }, [element, setWidth]);\n\n    // shadow event\n    const mouseDownDate = useRef<Date>();\n\n    const mouseDownHandler = useCallback<\n      React.MouseEventHandler<HTMLDivElement>\n    >(\n      ev => {\n        if (\n          !(ev.target instanceof Element) ||\n          !ev.target.hasAttribute('week-picker-cell')\n        )\n          return;\n        // prevent dnd\n        ev.preventDefault();\n\n        mouseDownDate.current = date;\n\n        onMouseDown(ev);\n      },\n      [date, onMouseDown]\n    );\n\n    const mouseMoveHandler = useCallback<\n      React.MouseEventHandler<HTMLDivElement>\n    >(\n      ev => {\n        const offset = ev.currentTarget.getBoundingClientRect();\n        const pos: Pos = {\n          x: ev.clientX - offset.left,\n          y: ev.clientY - offset.top,\n        };\n\n        setPos(pos);\n\n        onMouseMove(ev);\n\n        if (\n          mouseDownDate.current &&\n          !shadowEvent &&\n          roundToQuarterHour(mouseDownDate.current).getTime() !==\n            roundToQuarterHour(date).getTime()\n        ) {\n          setStartDragDate(mouseDownDate.current);\n        }\n      },\n      [setPos, onMouseMove, shadowEvent, date, setStartDragDate]\n    );\n\n    useIsomorphicLayoutEffect(() => {\n      const dragEndHandler = () => {\n        if (mouseDownDate.current) {\n          if (shadowEvent) {\n            requestAddEventHandler(shadowEvent);\n          } else {\n            requestAddEventHandler({\n              startDate: date,\n              endDate: new Date(date.getTime() + 2 * HOUR_IN_MILLIS),\n            });\n          }\n        }\n\n        mouseDownDate.current = undefined;\n        setStartDragDate(undefined);\n      };\n\n      window.addEventListener('mouseup', dragEndHandler);\n\n      return () => {\n        window.removeEventListener('mouseup', dragEndHandler);\n      };\n    }, [setStartDragDate, requestAddEventHandler, shadowEvent, date]);\n\n    return (\n      <div\n        {...props}\n        style={{\n          position: 'relative',\n          height: `${cellHeight * 24}px`,\n          ...style,\n        }}\n        onMouseMove={mouseMoveHandler}\n        onDrag={ev => ev.preventDefault()}\n        onMouseDown={mouseDownHandler}\n        ref={ref || setRef}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n","import React, { Fragment } from 'react';\nimport { DAY_IN_MILLIS } from '../constants';\nimport { useHwcContext } from '../contexts/HwcContext';\n\nexport type RenderCellProps = {\n  style: React.CSSProperties;\n  cellHeight: number;\n  cellWidth: number;\n  x?: 'start' | 'end';\n  y?: 'start' | 'end';\n  date: Date;\n};\n\nexport type HwcGridProps = Omit<React.ComponentProps<'div'>, 'children'> & {\n  colStyle?: React.CSSProperties;\n  defaultStyles?: boolean;\n\n  children?: (props: RenderCellProps) => JSX.Element | JSX.Element[];\n};\n\nconst defaultCellRenderer = ({ style }: RenderCellProps) => (\n  <div style={style} />\n);\n\nexport const HwcGrid = React.forwardRef<HTMLDivElement, HwcGridProps>(\n  ({ style, colStyle, children, ...props }, ref) => {\n    const { startDay, cellHeight, cellWidth, daysCount } = useHwcContext();\n\n    const days = new Array(daysCount)\n      .fill(0)\n      .map((_, index) => new Date(startDay.getTime() + index * DAY_IN_MILLIS));\n    const lines = new Array(24).fill(0).map((_, index) => index);\n\n    return (\n      <div\n        {...props}\n        ref={ref}\n        style={{\n          position: 'absolute',\n          width: '100%',\n          display: 'flex',\n          ...style,\n        }}\n      >\n        {days.map((d, dIndex) => (\n          <div\n            key={dIndex}\n            style={{ flex: '0 0 1', width: '100%', ...colStyle }}\n          >\n            {lines.map(l => {\n              const x =\n                dIndex === 0\n                  ? 'start'\n                  : dIndex === days.length - 1\n                  ? 'end'\n                  : undefined;\n              const y =\n                l === 0 ? 'start' : l === lines.length - 1 ? 'end' : undefined;\n\n              return (\n                <Fragment key={l}>\n                  {React.Children.map(\n                    (children || defaultCellRenderer)({\n                      cellHeight,\n                      cellWidth,\n                      style: {\n                        height: `${cellHeight}px`,\n                        borderLeft:\n                          x === 'start' ? undefined : `#aaa solid 1px`,\n                        borderTop: y === 'start' ? undefined : `#aaa solid 1px`,\n                        boxSizing: 'border-box',\n                      },\n                      x,\n                      y,\n                      date: d,\n                    }),\n                    node => React.cloneElement(node, { 'week-picker-cell': '' })\n                  )}\n                </Fragment>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n    );\n  }\n);\n","export const MINUTE_IN_MILLIS = 60 * 1000;\nexport const HOUR_IN_MILLIS = 60 * MINUTE_IN_MILLIS;\nexport const DAY_IN_MILLIS = 24 * HOUR_IN_MILLIS;\n","import { DAY_IN_MILLIS } from '../constants';\nimport { HwcEvent } from '../models/event.model';\nimport { startOfDay } from './round';\n\nexport const buildIsEventVisibleFilter = (\n  startDay: Date,\n  daysCount: number\n) => {\n  const startMillis = startOfDay(startDay).getTime();\n  const endMillis = startMillis + daysCount * DAY_IN_MILLIS;\n\n  return (ev: HwcEvent) => {\n    return (\n      ev.startDate.getTime() < endMillis && ev.endDate.getTime() > startMillis\n    );\n  };\n};\n\nexport const getCroppedEventsByDay = (ev: HwcEvent): HwcEvent[] => {\n  const events: HwcEvent[] = [];\n\n  const evEndMillis = ev.endDate.getTime();\n\n  for (let i = 0; i < 20; i++) {\n    const lastCroppedEvent: HwcEvent | undefined = events[events.length - 1];\n    const nextDayMillis = lastCroppedEvent\n      ? startOfDay(lastCroppedEvent.startDate).getTime() + 2 * DAY_IN_MILLIS\n      : startOfDay(ev.startDate).getTime() + 1 * DAY_IN_MILLIS;\n\n    const isOverflow = nextDayMillis < evEndMillis;\n\n    events.push({\n      startDate: new Date(\n        lastCroppedEvent ? lastCroppedEvent.endDate : ev.startDate\n      ),\n      endDate: new Date(isOverflow ? nextDayMillis : evEndMillis),\n    });\n\n    if (!isOverflow) break;\n  }\n\n  return events;\n};\n","import React, { Fragment, useMemo } from 'react';\nimport { DAY_IN_MILLIS, HOUR_IN_MILLIS } from '../constants';\nimport { useHwcContext } from '../contexts/HwcContext';\nimport { HwcEvent } from '../models/event.model';\nimport {\n  buildIsEventVisibleFilter,\n  getCroppedEventsByDay,\n} from '../utils/events';\nimport { startOfDay } from '../utils/round';\n\nexport type Rect = {\n  width: number;\n  height: number;\n  left: number;\n  top: number;\n};\n\nexport type RenderCardProps = {\n  event: HwcEvent;\n  rect: Rect;\n  isFirst: boolean;\n  isLast: boolean;\n};\n\nexport type HwcEventsRendererProps = {\n  renderCard?: (props: RenderCardProps) => React.ReactNode;\n};\n\nconst defaultRenderCard = ({ rect }: RenderCardProps) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        backgroundColor: 'orange',\n        border: 'solid orangered 2px',\n        boxSizing: 'border-box',\n        borderRadius: '3px',\n        width: `${rect.width - 2}px`,\n        height: `${rect.height - 2}px`,\n        left: `${rect.left}px`,\n        top: `${rect.top}px`,\n      }}\n    />\n  );\n};\n\nexport const HwcEventsRenderer: React.FC<HwcEventsRendererProps> = ({\n  renderCard,\n}) => {\n  const { events, cellWidth, cellHeight, startDay, daysCount, shadowEvent } =\n    useHwcContext();\n\n  const cards = useMemo<RenderCardProps[]>(() => {\n    const eventsFilter = buildIsEventVisibleFilter(startDay, daysCount);\n\n    return [...events, ...(shadowEvent ? [shadowEvent] : [])]\n      .filter(eventsFilter)\n      .map(getCroppedEventsByDay)\n      .map(croppeds =>\n        croppeds.map((ev, index) => ({\n          ...ev,\n          isFirst: index === 0,\n          isLast: index === croppeds.length - 1,\n        }))\n      )\n      .flat()\n      .filter(eventsFilter)\n      .map(ev => {\n        const day =\n          (startOfDay(ev.startDate).getTime() -\n            startOfDay(startDay).getTime()) /\n          DAY_IN_MILLIS;\n\n        const duration = ev.endDate.getTime() - ev.startDate.getTime();\n        const millisFromDayStart =\n          ev.startDate.getTime() - startOfDay(ev.startDate).getTime();\n\n        return {\n          event: {\n            startDate: ev.startDate,\n            endDate: ev.endDate,\n          },\n          rect: {\n            width: cellWidth,\n            height: (duration / HOUR_IN_MILLIS) * cellHeight,\n            left: day * cellWidth,\n            top: (millisFromDayStart / HOUR_IN_MILLIS) * cellHeight,\n          },\n          isFirst: ev.isFirst,\n          isLast: ev.isLast,\n        };\n      });\n  }, [events, cellWidth, startDay, daysCount, shadowEvent, cellHeight]);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {cards.map((cardProps, index) => {\n        return (\n          <Fragment key={index}>\n            {(renderCard || defaultRenderCard)(cardProps)}\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n};\n","import React from 'react';\nimport { DAY_IN_MILLIS } from '../constants';\nimport { useHwcContext } from '../contexts/HwcContext';\n\nexport type HwcHeaderProps = {\n  locale?: string;\n  dateFormatOptions?: Intl.DateTimeFormatOptions;\n};\n\nexport const HwcHeader: React.FC<HwcHeaderProps> = ({\n  locale,\n  dateFormatOptions = { day: '2-digit', weekday: 'short' },\n}) => {\n  const { startDay, daysCount } = useHwcContext();\n\n  const days = new Array(daysCount)\n    .fill(0)\n    .map((_, index) => new Date(startDay.getTime() + index * DAY_IN_MILLIS));\n\n  return (\n    <div style={{ display: 'flex' }}>\n      {days.map((d, dIndex) => (\n        <div key={dIndex} style={{ flex: '0 0 1', width: '100%' }}>\n          {d.toLocaleDateString(locale, dateFormatOptions)}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { useCallback, useMemo, useState } from 'react';\nimport { IHwcContext } from '../contexts/HwcContext';\nimport { HwcEvent } from '../models/event.model';\nimport { Pos } from '../models/pos.model';\nimport { posToDate } from '../utils/posToDate';\nimport { roundToQuarterHour, startOfDay } from '../utils/round';\n\nexport type UseHwcProps = {\n  startDay?: Date;\n  daysCount?: number;\n  cellHeight?: number;\n\n  events?: HwcEvent[];\n\n  onAddEventRequest?: (ev: HwcEvent) => void;\n};\n\nexport const useHwc = (props: UseHwcProps = {}): IHwcContext => {\n  const {\n    startDay = new Date(),\n    cellHeight = 50,\n    daysCount = 7,\n    events = [],\n    onAddEventRequest = () => {},\n  } = props;\n\n  const normalizedStartDay = useMemo(() => startOfDay(startDay), [startDay]);\n\n  // column witdh\n  const [width, setWidth] = useState(0);\n  const cellWidth = useMemo(() => width / daysCount, [width, daysCount]);\n\n  // mouse position and date\n  const [pos, setPos] = useState<Pos>({ x: 0, y: 0 });\n  const date = useMemo(\n    () => posToDate(pos, width, normalizedStartDay, cellHeight),\n    [pos, width, normalizedStartDay, cellHeight]\n  );\n\n  // shadow event\n  const [startDragDate, setStartDragDate] = useState<Date>();\n\n  const shadowEvent = useMemo<HwcEvent | undefined>(() => {\n    if (!startDragDate) return undefined;\n\n    const dates = [\n      roundToQuarterHour(startDragDate),\n      roundToQuarterHour(date),\n    ].sort((a, b) => a.getTime() - b.getTime());\n\n    return {\n      startDate: dates[0],\n      endDate: dates[1],\n    };\n  }, [startDragDate, date]);\n\n  const requestAddEventHandler = useCallback(\n    (ev: HwcEvent) => {\n      onAddEventRequest(ev);\n    },\n    [onAddEventRequest]\n  );\n\n  return {\n    pos,\n    date,\n    cellWidth,\n    cellHeight,\n\n    startDay: normalizedStartDay,\n    daysCount,\n\n    events,\n\n    setPos,\n    setWidth,\n\n    shadowEvent,\n    setStartDragDate,\n    requestAddEventHandler,\n  };\n};\n","import { DAY_IN_MILLIS, MINUTE_IN_MILLIS } from '../constants';\nimport { Pos } from '../models/pos.model';\n\nexport const posToDate = (\n  pos: Pos,\n  width: number,\n  startDay: Date,\n  hourHeight: number\n): Date => {\n  const minuteHeight = 60 / hourHeight;\n  const minutesDay = pos.y * minuteHeight;\n\n  const dayInGrid = Math.trunc((pos.x / (width || 1)) * 7);\n\n  return new Date(\n    startDay.getTime() +\n      dayInGrid * DAY_IN_MILLIS +\n      minutesDay * MINUTE_IN_MILLIS\n  );\n};\n"],"names":["HwcContext","React","createContext","HwcProvider","Provider","useHwcContext","ctx","useContext","Error","roundToQuarterHour","date","rounded","startOfMinute","minutes","getMinutes","getHours","roundedMinute","Math","round","d","startOfDay","setMinutes","input","Date","setHours","setSeconds","HwcDragPane","forwardRef","ref","onMouseMove","onMouseDown","style","children","props","setPos","setWidth","setStartDragDate","requestAddEventHandler","shadowEvent","cellHeight","useState","element","setRef","useIsomorphicLayoutEffect","observer","ResizeObserver","entry","contentRect","width","observe","disconnect","mouseDownDate","useRef","mouseDownHandler","useCallback","ev","target","Element","hasAttribute","preventDefault","current","mouseMoveHandler","offset","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","getTime","dragEndHandler","startDate","endDate","undefined","window","addEventListener","removeEventListener","position","height","onDrag","defaultCellRenderer","HwcGrid","colStyle","startDay","cellWidth","days","Array","daysCount","fill","map","_","index","lines","display","dIndex","key","flex","l","length","Fragment","Children","borderLeft","borderTop","boxSizing","node","cloneElement","week-picker-cell","getCroppedEventsByDay","events","evEndMillis","i","lastCroppedEvent","nextDayMillis","isOverflow","push","defaultRenderCard","rect","backgroundColor","border","borderRadius","renderCard","cards","useMemo","eventsFilter","startMillis","endMillis","buildIsEventVisibleFilter","filter","croppeds","isFirst","isLast","flat","day","duration","millisFromDayStart","event","cardProps","locale","dateFormatOptions","weekday","toLocaleDateString","onAddEventRequest","normalizedStartDay","pos","hourHeight","minutesDay","dayInGrid","trunc","posToDate","startDragDate","dates","sort","a","b"],"mappings":"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"}